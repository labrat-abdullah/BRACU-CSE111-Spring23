# -*- coding: utf-8 -*-
"""homework-06.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hGsohowO16kgzzJYmu9yiVKrA2qBPZ8M
"""

##task##
class Movie:
  def __init__(self,name,genre,duration):
    self.name = name
    self.genre = genre
    self.duration = duration
  def movieInfo(self):
    return f"Movie Name:Mission: {self.name} \nMovie Genre:{self.genre} \nMovie Duration:{self.duration} minutes."
  @classmethod
  def createMovie_fromString(cls,string):
    data = string.split("-")
    return cls(data[0],data[1],int(data[-1]))

class StarCinema:
  all_branch_info = {}
  def __init__(self,branch_name):
    self.branch_name = branch_name
    self.movie_list = []
    print(f"Welcome to the {self.branch_name} branch of StarCinema! ")
  def addMovies(self,*movie_objects):
    for i in movie_objects:
      if i not in self.movie_list:
        self.movie_list.append(i)
        print(f"{i.name} added to {self.branch_name} branch. ")
    StarCinema.all_branch_info[self.branch_name] = self.movie_list
  def removeMovie(self,movie):
    dic = {}
    for i in self.movie_list:
      if i.name != movie.name:
        if i not in dic:
          dic[i] = []
        else:
          dic[i].append(dic[i])
    self.movie_list = dic
    StarCinema.all_branch_info[self.branch_name] = dic
  @staticmethod
  def showAllBranchInfo():
    for i,j in StarCinema.all_branch_info.items():
      counter = 1
      print(f"Branch Name:{i} ")
      for k in j:
        print(f"Movie No: {counter} \nMovie Name:{k.name} \nMovie Genre:{k.genre} \nMovie Duration:{k.duration} minutes.")
        print("**************************")
        counter += 1
  @staticmethod
  def check(movie):
    ind = 0
    flag = True
    for i,j in StarCinema.all_branch_info.items():
      counter = 0
      if movie == j[counter].name:
        print(f"{movie} is being played in {i} branch")
        counter += 1
        ind = counter
      else:
         flag = False
    if flag:
      print(f"It is of {j[counter].genre} genre and {j[counter].duration} minutes duration")
    else:
      print(f"{movie} is not being streamed in any branch")

##Demo driver code
movie1 = Movie('Oppenheimer', 'Biographical Drama', 180)
movie2 = Movie('Barbie', 'Fantasy Comedy', 114)
movie3 = Movie('Mission: Impossible â€“ Dead Reckoning Part One', 'Action', 163)
print('1==========================================')
print(movie3.movieInfo())
print('2==========================================')
movie4 = Movie.createMovie_fromString('Prohelika-Drama-153')
print('3==========================================')
print(movie4.movieInfo())
print('4==========================================')
branch1 = StarCinema('Mohakhali')
print('5==========================================')
branch1.addMovies(movie1, movie2, movie4)
print('6==========================================')
branch1.addMovies(movie1, movie3)
print('7==========================================')
StarCinema.showAllBranchInfo()
print('8==========================================')
branch2 = StarCinema('Mirpur')
print('9==========================================')
branch2.addMovies(movie1, movie2, movie3)
print('10==========================================')
StarCinema.showAllBranchInfo()
print('11==========================================')
StarCinema.check('Oppenheimer')
print('12=========================================')
StarCinema.check('Sound of Freedom')
print('13=========================================')
branch1.removeMovie(movie2)
StarCinema.showAllBranchInfo()
print('14=========================================')
branch2.removeMovie(movie1)
StarCinema.showAllBranchInfo()